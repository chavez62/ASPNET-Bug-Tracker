@model BugTracker.Models.BugReport
@using BugTracker.Models
@using BugTracker.Models.Enums
@using System.IO
@using System.Linq

<!-- Basic Information Card -->
<div class="card shadow-sm mb-4">
    <div class="card-header bg-white py-3">
        <h5 class="card-title mb-0">
            <i class="bi bi-info-circle me-2"></i>Basic Information
        </h5>
    </div>
    <div class="card-body">
        <div class="mb-4">
            <label asp-for="Title" class="form-label fw-semibold">Title</label>
            <input asp-for="Title" class="form-control form-control-lg" placeholder="Enter a descriptive title" />
            <span asp-validation-for="Title" class="text-danger"></span>
            <div class="form-text">Be specific and clear about the issue</div>
        </div>

        <div class="mb-4">
            <label asp-for="Description" class="form-label fw-semibold">Description</label>
            <textarea asp-for="Description" class="form-control" rows="6"
                placeholder="Provide detailed steps to reproduce the issue and expected behavior"></textarea>
            <span asp-validation-for="Description" class="text-danger"></span>
            <div class="form-text">Include any relevant context or background information</div>
        </div>
    </div>
</div>

<!-- Classification Card -->
<div class="card shadow-sm mb-4">
    <div class="card-header bg-white py-3">
        <h5 class="card-title mb-0">
            <i class="bi bi-tag me-2"></i>Classification
        </h5>
    </div>
    <div class="card-body">
        <div class="row">
            <div class="col-md-6 mb-3">
                <label asp-for="Severity" class="form-label fw-semibold">Severity</label>
                <select asp-for="Severity" asp-items="Html.GetEnumSelectList<Severity>()" class="form-select">
                    <option value="">-- Select Severity --</option>
                </select>
                <span asp-validation-for="Severity" class="text-danger"></span>
            </div>
            <div class="col-md-6 mb-3">
                <label asp-for="Status" class="form-label fw-semibold">Status</label>
                <select asp-for="Status" asp-items="Html.GetEnumSelectList<Status>()" class="form-select">
                    <option value="">-- Select Status --</option>
                </select>
                <span asp-validation-for="Status" class="text-danger"></span>
            </div>
        </div>

        <div class="mb-3">
            <label class="form-label fw-semibold">Tags</label>
            @{
                var tagSource = ViewBag.SelectedTags as IEnumerable<Tag>;
                tagSource ??= Model?.Tags;
                var selectedTags = tagSource?.ToList() ?? new List<Tag>();
            }
            <select id="tagSelect" name="SelectedTagIds" multiple class="form-control">
                @foreach (var tag in selectedTags)
                {
                    var backgroundColor = string.IsNullOrWhiteSpace(tag.Color) ? "#6c757d" : tag.Color;
                    var tagName = string.IsNullOrWhiteSpace(tag.Name) ? $"Tag #{tag.Id}" : tag.Name;
                    <option value="@tag.Id" selected data-color="@backgroundColor">@tagName</option>
                }
            </select>
            <div class="form-text">Select or create tags to categorize this bug report</div>
        </div>
    </div>
</div>

<!-- Assignment Card -->
<div class="card shadow-sm mb-4">
    <div class="card-header bg-white py-3">
        <h5 class="card-title mb-0">
            <i class="bi bi-person me-2"></i>Assignment
        </h5>
    </div>
    <div class="card-body">
        <div class="mb-3">
            <label asp-for="AssignedToId" class="form-label fw-semibold">Assign To</label>
            <select asp-for="AssignedToId" asp-items="ViewBag.Users" class="form-select">
                <option value="">-- Select User --</option>
            </select>
            <span asp-validation-for="AssignedToId" class="text-danger"></span>
        </div>

        @if (ViewBag.Projects != null)
        {
            <div class="mb-3">
                <label asp-for="ProjectId" class="form-label fw-semibold">Project</label>
                <select asp-for="ProjectId" asp-items="ViewBag.Projects" class="form-select">
                    <option value="">-- Select Project --</option>
                </select>
                <span asp-validation-for="ProjectId" class="text-danger"></span>
            </div>
        }
    </div>
</div>

<!-- Attachments Card -->
<div class="card shadow-sm mb-4">
    <div class="card-header bg-white py-3">
        <h5 class="card-title mb-0">
            <i class="bi bi-paperclip me-2"></i>Attachments
        </h5>
    </div>
    <div class="card-body">
        <div class="mb-3">
            <label class="form-label fw-semibold">Upload Files</label>
            <input type="file" name="files" multiple class="form-control" />
            <div class="form-text">
                Max 5 files. Supported formats: .jpg, .jpeg, .png, .pdf, .txt, .log
            </div>
        </div>

        @{
            var attachmentsSource = ViewBag.ExistingAttachments as IEnumerable<BugAttachment>;
            attachmentsSource ??= Model?.Attachments;
            var orderedAttachments = attachmentsSource?
                .OrderByDescending(a => a.UploadDate)
                .ToList() ?? new List<BugAttachment>();
            var attachmentCount = orderedAttachments.Count;
        }

        @if (attachmentCount > 0)
        {
            <div class="mt-4">
                <div class="d-flex justify-content-between align-items-center mb-3">
                    <h6 class="fw-semibold mb-0">Existing Attachments</h6>
                    <small class="text-muted">@attachmentCount item@(attachmentCount == 1 ? string.Empty : "s")</small>
                </div>
                <div id="existingAttachments" class="list-group">
                    @foreach (var attachment in orderedAttachments)
                    {
                        var isImage = attachment.ContentType?.StartsWith("image", StringComparison.OrdinalIgnoreCase) == true;
                        var uploadedDate = attachment.UploadDate == default
                        ? "Unknown"
                        : attachment.UploadDate.ToLocalTime().ToString("MMM dd, yyyy");

                        <div class="list-group-item attachment-item d-flex flex-column flex-md-row align-items-md-center gap-3">
                            <div class="d-flex align-items-center gap-3 flex-grow-1">
                                <div class="attachment-preview shadow-sm flex-shrink-0">
                                    @if (isImage)
                                    {
                                        <img src="@Url.Action("GetFile", "SecureFile", new { attachmentId = attachment.Id })"
                                            alt="Preview of @attachment.FileName" loading="lazy" />
                                    }
                                    else
                                    {
                                        <i class="bi bi-file-earmark-text fs-3 text-muted"></i>
                                    }
                            </div>
                            <div class="overflow-hidden">
                                <div class="fw-semibold text-truncate" title="@attachment.FileName">@attachment.FileName
                                </div>
                                <div class="small text-muted text-uppercase">
                                    @{ var ext = System.IO.Path.GetExtension(attachment.FileName); }
                                    @(string.IsNullOrWhiteSpace(ext)
                                        ? "UNKNOWN"
                                        : ext.Trim('.').ToUpperInvariant()) Â· @((attachment.FileSize / 1024.0).ToString("F1")) KB
                                </div>
                            <div class="small text-muted">Uploaded @uploadedDate</div>
                        </div>
                    </div>
                    <div class="attachment-actions d-flex gap-2 ms-md-auto">
                        <a href="@Url.Action("GetFile", "SecureFile", new { attachmentId = attachment.Id })"
                            class="btn btn-sm btn-outline-primary d-flex align-items-center justify-content-center gap-1" download>
                            <i class="bi bi-download"></i>
                            <span>Download</span>
                        </a>
                        @if (isImage)
                                {
                                    <a href="@Url.Action("GetFile", "SecureFile", new { attachmentId = attachment.Id })"
                                        class="btn btn-sm btn-outline-secondary d-flex align-items-center justify-content-center gap-1"
                                        target="_blank" rel="noopener noreferrer">
                                        <i class="bi bi-eye"></i>
                                        <span>Preview</span>
                                    </a>
                                }
                                <button type="button"
                                    class="btn btn-sm btn-outline-danger d-flex align-items-center justify-content-center gap-1 delete-attachment-button"
                                    data-delete-url="@Url.Action("DeleteAttachment", "BugAttachments")"
                                    data-attachment-id="@attachment.Id"
                                    data-bug-id="@Model.Id">
                                    <i class="bi bi-trash"></i>
                                    <span>Delete</span>
                                </button>
                            </div>
                        </div>
                    }
                </div>
            </div>
        }
    </div>
</div>