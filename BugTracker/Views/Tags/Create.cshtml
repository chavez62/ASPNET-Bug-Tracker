@model BugTracker.Models.Tag

@{
    ViewData["Title"] = "Create Tag";
}

@section Styles {
    <style>
        .breadcrumb-modern {
            padding: .75rem 1.1rem;
            background: var(--bs-body-bg);
            border-radius: .9rem;
            border: 1px solid var(--bs-border-color-translucent, rgba(15, 23, 42, 0.08));
            box-shadow: inset 0 0 0 1px rgba(255, 255, 255, 0.5);
        }

        .breadcrumb-modern .breadcrumb-item+.breadcrumb-item::before {
            color: var(--bs-secondary-color);
            content: '>';
            margin-right: .6rem;
            margin-left: .4rem;
        }

        .breadcrumb-modern .breadcrumb-link {
            display: inline-flex;
            align-items: center;
            gap: .4rem;
            text-decoration: none;
            color: inherit;
            font-weight: 500;
        }

        .breadcrumb-modern .breadcrumb-link:hover,
        .breadcrumb-modern .breadcrumb-link:focus {
            color: var(--bs-primary);
        }

        .breadcrumb-modern .breadcrumb-item.active {
            color: var(--bs-primary);
            font-weight: 600;
        }

        .breadcrumb-pill {
            display: inline-flex;
            align-items: center;
            gap: .4rem;
            padding: .3rem .85rem;
            border-radius: 999px;
            background: rgba(15, 23, 42, 0.03);
            border: 1px solid var(--bs-border-color-translucent, rgba(15, 23, 42, 0.08));
            font-weight: 500;
            color: var(--bs-secondary-color);
        }

        .breadcrumb-pill i {
            color: var(--bs-primary);
        }
    </style>
}

<div class="container-fluid py-4 bg-light">
    <!-- Header Section -->
    <div class="bg-white rounded-lg shadow-sm p-4 mb-4">
        <nav aria-label="breadcrumb" class="mb-3">
            <ol class="breadcrumb breadcrumb-modern align-items-center mb-0">
                <li class="breadcrumb-item">
                    <a href="/" class="breadcrumb-link">
                        <i class="bi bi-house"></i>
                        <span>Home</span>
                    </a>
                </li>
                <li class="breadcrumb-item">
                    <a asp-action="Index" class="breadcrumb-link">
                        <i class="bi bi-tags"></i>
                        <span>Tags</span>
                    </a>
                </li>
                <li class="breadcrumb-item active" aria-current="page">
                    <span class="breadcrumb-pill">
                        <i class="bi bi-plus-circle"></i>
                        Create New
                    </span>
                </li>
            </ol>
        </nav>
        <h1 class="h3 mb-0">Create New Tag</h1>
    </div>

    <div class="row">
        <div class="col-lg-6">
            <form asp-action="Create" method="post">
                <div asp-validation-summary="ModelOnly" class="alert alert-danger"></div>

                <div class="card shadow-sm">
                    <div class="card-header bg-white py-3">
                        <h5 class="card-title mb-0">
                            <i class="bi bi-tag me-2"></i>Tag Details
                        </h5>
                    </div>
                    <div class="card-body">
                        <div class="mb-4">
                            <label asp-for="Name" class="form-label fw-semibold">Tag Name</label>
                            <input asp-for="Name" class="form-control" placeholder="Enter tag name" />
                            <span asp-validation-for="Name" class="text-danger"></span>
                            <div class="form-text">Enter a unique name for this tag</div>
                        </div>

                        <div class="mb-4">
                            <label asp-for="Color" class="form-label fw-semibold">Tag Color</label>
                            <div class="d-flex gap-3 align-items-center">
                                <input asp-for="Color" type="color" class="form-control form-control-color"
                                    style="width: 60px; height: 40px;" />
                                <input asp-for="Color" type="text" class="form-control flex-grow-1"
                                    placeholder="#6c757d" />
                            </div>
                            <span asp-validation-for="Color" class="text-danger"></span>
                            <div class="form-text">Choose a color to represent this tag</div>
                        </div>

                        <div class="mb-4">
                            <label class="form-label fw-semibold">Preview</label>
                            <div>
                                <span id="tagPreview" class="badge"
                                    style="background-color: #6c757d; color: #FFFFFF; font-size: 0.9rem; padding: 0.5rem 0.75rem;">
                                    Sample Tag
                                </span>
                            </div>
                        </div>
                    </div>
                    <div class="card-footer bg-white">
                        <div class="d-flex gap-2">
                            <button type="submit" class="btn btn-primary">
                                <i class="bi bi-check-circle me-2"></i>Create Tag
                            </button>
                            <a asp-action="Index" class="btn btn-outline-secondary">
                                <i class="bi bi-x-circle me-2"></i>Cancel
                            </a>
                        </div>
                    </div>
                </div>
            </form>
        </div>

        <!-- Help Card -->
        <div class="col-lg-6">
            <div class="card shadow-sm">
                <div class="card-header bg-white py-3">
                    <h5 class="card-title mb-0">
                        <i class="bi bi-lightbulb me-2"></i>Tag Guidelines
                    </h5>
                </div>
                <div class="card-body">
                    <ul class="list-unstyled mb-0">
                        <li class="mb-3">
                            <i class="bi bi-check-circle-fill text-success me-2"></i>
                            Use clear, descriptive names
                        </li>
                        <li class="mb-3">
                            <i class="bi bi-check-circle-fill text-success me-2"></i>
                            Keep names short and meaningful
                        </li>
                        <li class="mb-3">
                            <i class="bi bi-check-circle-fill text-success me-2"></i>
                            Choose distinct colors for easy identification
                        </li>
                        <li class="mb-3">
                            <i class="bi bi-check-circle-fill text-success me-2"></i>
                            Consider using tags for: Priority, Component, Platform, etc.
                        </li>
                        <li>
                            <i class="bi bi-check-circle-fill text-success me-2"></i>
                            Tag names must be unique
                        </li>
                    </ul>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        // Update preview in real-time
        function updatePreview() {
            const name = document.getElementById('Name').value || 'Sample Tag';
            const color = document.getElementById('Color').value || '#6c757d';
            const preview = document.getElementById('tagPreview');

            preview.textContent = name;
            preview.style.backgroundColor = color;

            // Calculate text color based on background
            const r = parseInt(color.slice(1, 3), 16);
            const g = parseInt(color.slice(3, 5), 16);
            const b = parseInt(color.slice(5, 7), 16);
            const brightness = (r * 299 + g * 587 + b * 114) / 1000;

            preview.style.color = brightness > 128 ? '#000000' : '#FFFFFF';
        }

        // Sync color inputs
        document.querySelectorAll('input[name="Color"]').forEach(input => {
            input.addEventListener('input', function () {
                document.querySelectorAll('input[name="Color"]').forEach(other => {
                    if (other !== this) other.value = this.value;
                });
                updatePreview();
            });
        });

        document.getElementById('Name').addEventListener('input', updatePreview);

        // Initialize preview
        updatePreview();
    </script>
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}